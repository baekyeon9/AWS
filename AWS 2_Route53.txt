### AWS2 S3-1

**특징**

 - 99.9999% 내구성 (불사조 같은 파일! 죽지 않아!)

 - 버전관리 기능 (수정 기록 이전 버전 유지)

 - 파일 보존기간 설정 가능

   

### AWS2 S3-2, 3

**구성** 

  1) Bucket = 하나의 프로젝트
  2) Folder 
  3) Object = File + 부가정보

* S3를 다룰줄 안다는 것? 1)~3)을 생성, 읽고, 수정, 삭제 가능하다!



### AWS2 S3-4

**[Create]**

1. Bucket 만들기 (경로 : 서비스 - 스토리지 - S3)

* 이름 및 리전 
   - 이름 지정 : Amazon S3내에서 고유한 이름이어야 한다.

* 옵션구성

* 권한설정

* 정보 

  

**[Read, Update, Delete]**

* Update : Bucket 이름 옆 click - 속성창 (이름 수정 불가)



### AWS2 S3-4 

**[Folder]** 

 - 경로 : Bucket의 개요 - 폴더만들기 / 이름수정x / 삭제

 

### AWS2 S3-6 객체파일



### AWS2 S3-7 공유와 권한

**[ 공유 ]**

* 경로 : File 클릭 - 링크복사 - 공유



**[ 권한]**

 - 경로 :  권한설정 
   - AWS 계정에 대한 Access = Me
   - 다른 AWS 계정에 대한 Access 
   - Public Access  = Everyone



### AWS2 S3-8.1 Storage Class

**[ Storage Class ]**

 - 경로 : File - 속성

  - Standard

  - Standard IA (Infrequent)

  - 단일영역 IA : 잃어버려도 괜찮은(?), 가용영역 1>=1 

  - 중복감소 (권장안함)

  - Amazon Glacier : 냉동보관하듯, 꺼내고 읽는데 시간 소요 예) 영수증 

    

### AWS2 S3-8.2 요금 체계

1) 저장공간 요금 (저장 공간 얼마나 차지?)
   - Storage 요금 


2. 사용요금(얼마나 사용했는지?)

    - 요청요금

    - S3 스탠다드 IA

    - S3 OneZone IA

    - Amazon Glacier 요청


3. Storage 관리 요금

4. 인터넷요금 (얼마나 전송했는지?)

    - 데이터 전송요금 (Storage 클래스별 구분 x)

    - Upload 무료 / Download 유료 (1GB까지는 무료)




### AWS2 S3-9

**Cloud Front 결합**
**CDN Content Delivery Network**

 - 전세계에 서버를 분산시켜놓고, 요청이 들어오면 가장 가까운 곳에 미리 저장하고 있었던 content를 보내준다.
 - 예) 뉴욕에 있는 사람이 내 서버에 접속할 때, 한국의 서버가 아니라 뉴욕에 가까이 있는 서버에서 응답 (Fast)



**Version** 

 - version 관리 기능을 켜면 변경된 기능을 모두 보관 (복원 가능)
 - 이력을 남기는 것이 중요한 파일일 떄 사용



**Life Cycle**

 - Storage Class들 각각 속도, 안정성, 가격이 상이, 수명 주기 동안 객체가 비용 효율적으로 저장되도록 관리하려면 해당 Amazon S3 수명 주기를 구성
 - 전환 작업 : 작업은 객체가 다른 스토리지 클래스로 전환되는 시기를 정의한다.
   예를 들어, 생성 후 30일이 지나면 객체를 S3 STANDARD-IA 스토리지 클래스로 전환하거나 
     생성 후 1년이 지나면 객체를 S3 Glacier Flexible Retrieval 스토리지 클래스에 아카이브하도록 선택할 수 있다. 
 - 만료 작업 : 이 작업은 객체가 만료되는 시기를 정의. Amazon S3에서 만료된 객체를 자동으로 삭제.

