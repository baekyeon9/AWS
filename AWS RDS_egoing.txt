### AWS - RDS 1



**RDS (Amazon Relational Database Service) 정의**

 * Managed! CPU에 DB를 설치해 주고 대신 운영해 주는 것



**RDS 단점** 

 * 비용이 높다! (EC2에 2배정도)



**RDS를 사용하는 이유?**

* DB를 관리해 주는 merit! DB를 빠르고 안전하게 지킨다!
 - DB를 관리하는 것은 매우 어렵다.
 - 정보 비지니스의 core는 Data이고, 이 Data가 유실/유출 되는 것은 매우 치명적.





### AWS - RDS 2.1 데이터베이스 생성1 (MySQL 기준)



* 경로 : 서비스 - 데이터베이스 - RDS - 인스턴스 - 데이터베이스 생성

* 엔진 선택 
 * RDS 프리티어에 적용되는 옵션만 사용 (1년간 무료) 
 - Amazone Aurora 제외 나머지 선택 가능
 - 데이터베이스 버전 선택
 - DB 인스턴스 클래스 (DB를 이용할 CPU의 사양) : 프리티어는 단일 옵션 
	- 언제든지 사양 upgrade 할 수 있다.
 - 다중 AZ(Availability Zone) 배포 
 	- 대개 2-3개의 가용성 Zone이 있다.
	- Data의 유실을 막고, 서비스의 중지를 막는 것.
	- 단점 : 비용 2배 (CPU 2대 사용)
 - 스토리지 유형 (Data를 저장하는 disk)
	- 범용 (SSD) : 저렴, 속도 느림
		- 스토리지가 클수록 속도가 빨라진다.
	- 프로비저닝된 IOPS(SSD)
		- 용량, 속도 별도 지정 가능
		- 1,000~40,000 IOPS까지 
- 설정 
	- DB인스턴스 식별자 (DB이름)
	- 마스터 사용자 이름 
	- 마스터암호 / 확인





### AWS - RDS 2.1 데이터베이스 생성2 (MySQL 기준)



**[네트워크 및 보안]**

* VPC?

  - AWS 안에서 외부로부터 독립된 안전한 네트워크 구성해주는 SVC 

  - VPC를 생성하고 그 내부에 AWS RDS를 생성하면, 외부에서는 직접적으로 RDS에 접근할 수 없음 (해킹위협x, 안전) 

  - 같은 VPC안에 EC2같은 CPU를 생성하고, 이 서버로 RDS에 접근할 수 있도록 하면 된다!




* Public Access Possibility

  - No : 같은 VPS 안에서 RDS가 허가한 EC2 인스턴스만 접속할 수 있게 한다.

  - Yes : 외부에서 직접 RDS에 접속할 수 있게 한다.

  * VPC 보안 그룹
   - 새로운 VPC 보안 그룹 만들기




**[데이터베이스 옵션]**

* 데이터베이스 이름
* 포트
 - DB 접속 시 포트 (MySQL은 3306)



**[암호화]**



**[백업]**

* 백업 보존 기간 (최대 저장 기간)



**[모니터링]**

* 확장 모니터링 사용 
 - 상세한 상태에 대한 기록을 지정할 수 있음



**[로그 내보내기]**

* 감사 / 에러/ 일반 / 느린 쿼리



**[유지관리]**

* 마이너 버전 자동 업그레이드 사용
* 유지 관리 기간 (기간 선택)



**[삭제방지]**

* 삭제 방지 활성화 (안전장치)



