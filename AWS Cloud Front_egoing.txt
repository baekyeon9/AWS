<<<<<<< HEAD
AWS - CloudFront 1

1. 
- CloudFront = Cashe Server + CDN (2가지 주요 기능)
- 

1.1 Cache (가장 기본적인 기능)
 - WEB Page를 PHP 혹은 Nodejs 언어로 제작해서 서비스 하고 있다고 가정, 
   사용자 요청이 들어왔을 때마다, html로 미리 준비한 화면을 보여주는 것이 아니라,
   프로그래밍 언어를 통해서 동적으로 웹페이지 응답. => 더 많은 자원 (시간, 비용) 요구
   그러나, 변경이 많지 않은 웹페이지라면? 
   한 번 컨텐츠를 전송하면 다음 요청 시에 저장된 결과를 서비스할 수 있다면?

 - 정의 : 저장된 결과를 이용해서 응답(서비스) 하는 것! 
 - Caching Server : Cashe를 전담하는 서버
   

1.2 CDN 
 - 전 세계 사용자들에게 빠르게 content를 배달해 줄 수 있다.

=======
### AWS2 S3-9

**Cloud Front 결합**

**CDN Content Delivery Network**

 - 전세계에 서버를 분산시켜놓고, 요청이 들어오면 가장 가까운 곳에 미리 저장하고 있었던 content를 보내준다.
 - 예) 뉴욕에 있는 사람이 내 서버에 접속할 때, 한국의 서버가 아니라 뉴욕에 가까이 있는 서버에서 응답 (Fast)



**Version** 

* version 관리 기능을 켜면 변경된 기능을 모두 보관 (복원 가능)

* 이력을 남기는 것이 중요한 파일일 떄 사용

  

**Life Cycle**

 - Storage Class들 각각 속도, 안정성, 가격이 상이, 수명 주기 동안 객체가 비용 효율적으로 저장되도록 관리하려면 해당 Amazon S3 수명 주기를 구성
 - 전환 작업 : 작업은 객체가 다른 스토리지 클래스로 전환되는 시기를 정의한다.
   예를 들어, 생성 후 30일이 지나면 객체를 S3 STANDARD-IA 스토리지 클래스로 전환하거나 
    생성 후 1년이 지나면 객체를 S3 Glacier Flexible Retrieval 스토리지 클래스에 아카이브하도록 선택할 수 있다. 
 - 만료 작업 : 이 작업은 객체가 만료되는 시기를 정의. Amazon S3에서 만료된 객체를 자동으로 삭제.
>>>>>>> 830dece5a0cf984e0595f86b4fcb10d48088219c

